x[is.na(x)] <- 999
return(x)
}
Data <- lapply(Files[1:9], read.csv)
#From this point on:
#
#Everything that exists is an object.
#Everything that happens is a function call.
setwd("D:/Share Point/OneDrive/Comprehensive Exam - Data files")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
#Initializing Functions
na.zero <- function (x) {
x[is.na(x)] <- 999
return(x)
}
Data <- lapply(Files[1:9], read.csv)
taluk.all <- list()
for (i in 1:9){
taluk.all[[i]] <- Data[[i]][,4]
}
taluk.all <- Reduce(intersect, taluk.all)
#category <- c(3, 5, 6, 7, 8, 10)
manage <- c(1, 2, 3, 4)
taluk <- c("AFZALPUR", "ALAND", "BAGEPALLY", "BANGARAPETE", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINCHOLI", "CHINTAMANI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "GOWRIBIDANUR", "GUDIBANDA", "GULBARGA NORTH", "GULBARGA SOUTH", "HOSAKOTE", "JEWARGI", "K G F", "KANAKAPURA", "KOLAR", "MAGADI", "MALUR", "MULBAGAL", "NELAMANGALA", "RAMANAGARA", "SEDAM", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "SRINIVASAPUR", "YADGIR")
exclude <- c("SOUTH1", "ANEKAL", "SOUTH2", "SOUTH3", "SOUTH4", "NORTH4", "NORTH1", "NORTH2", "NORTH3")
k <- data.frame(matrix(0, nrow = 30, ncol = 9))
k[,1:4] <- c(2, 1, 4, 8, 9, 15, 18, 20, 22, 23, 28:31, 36, 44:49, 51, 55:62)
k[,5] <- c(1, 2, 4, 9, 10, 16, 19, 21, 23, 24, 29:32, 37, 46, 51:55, 57, 62:69)
k[,6] <- c(1, 2, 4, 9, 10, 16, 19, 21, 23, 24, 29:32, 37, 46, 51:55, 57, 61:68)
k[,7] <- c(2, 1, 4, 9, 10, 16, 19, 21, 23, 24, 29:32, 36, 45, 50:54, 56, 60:67)
k[,8] <- c(2, 1, 4, 9, 10, 16, 19, 21, 23, 24, 29:32, 37, 46, 51:55, 57, 61:68)
k[,9] <- c(1, 2, 4, 9, 10, 16, 19, 21, 23, 24, 29:32, 37, 46, 51:55, 57, 61:68)
Year <- c(2005:2013)
or(i in 1:9){
Data[[i]] <- Data[[i]][,k[,i]]
colnames(Data[[i]]) <- c("Dist_Name", "School_Code", "Block_Name", "Rural_Urban", "Medium", "Sch_Management", "Sch_Category", "School_Type", "No_of_Working_Days", "No_of_Acad_Inspection", "School_Dev_Grant_Recd", "School_Dev_Grant_Expnd", "TLM_Grant_Recd", "TLM_Grant_Expnd", "Tot_Clrooms", "Toilet_Girls", "Electricity", "Boundary_Wall", "Library", "PlayGround", "Blackboard", "Drinking_Water", "Male_Tch", "Female_Tch", "NoResp_Tch", "Head_Teacher", "Graduate_Teachers", "Tch_with_Prof_Qual", "Days_involved_in_non_tch_assgn", "Teachers_involved_in_non_tch_assgn")
Data[[i]] <- na.zero(Data[[i]])
Data[[i]]$acyear <- Year[i]
}
for(i in 1:9){
Data[[i]] <- Data[[i]][,k[,i]]
colnames(Data[[i]]) <- c("Dist_Name", "School_Code", "Block_Name", "Rural_Urban", "Medium", "Sch_Management", "Sch_Category", "School_Type", "No_of_Working_Days", "No_of_Acad_Inspection", "School_Dev_Grant_Recd", "School_Dev_Grant_Expnd", "TLM_Grant_Recd", "TLM_Grant_Expnd", "Tot_Clrooms", "Toilet_Girls", "Electricity", "Boundary_Wall", "Library", "PlayGround", "Blackboard", "Drinking_Water", "Male_Tch", "Female_Tch", "NoResp_Tch", "Head_Teacher", "Graduate_Teachers", "Tch_with_Prof_Qual", "Days_involved_in_non_tch_assgn", "Teachers_involved_in_non_tch_assgn")
Data[[i]] <- na.zero(Data[[i]])
Data[[i]]$acyear <- Year[i]
}
#From this point on:
#
#Everything that exists is an object.
#Everything that happens is a function call.
setwd("D:/Share Point/OneDrive/Comprehensive Exam - Data files")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
#Initializing Functions
na.zero <- function (x) {
x[is.na(x)] <- 999
return(x)
}
Data <- lapply(Files[1:9], read.csv)
taluk.all <- list()
for (i in 1:9){
taluk.all[[i]] <- Data[[i]][,4]
}
taluk.all <- Reduce(intersect, taluk.all)
#category <- c(3, 5, 6, 7, 8, 10)
manage <- c(1, 2, 3, 4)
taluk <- c("AFZALPUR", "ALAND", "BAGEPALLY", "BANGARAPETE", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINCHOLI", "CHINTAMANI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "GOWRIBIDANUR", "GUDIBANDA", "GULBARGA NORTH", "GULBARGA SOUTH", "HOSAKOTE", "JEWARGI", "K G F", "KANAKAPURA", "KOLAR", "MAGADI", "MALUR", "MULBAGAL", "NELAMANGALA", "RAMANAGARA", "SEDAM", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "SRINIVASAPUR", "YADGIR")
exclude <- c("SOUTH1", "ANEKAL", "SOUTH2", "SOUTH3", "SOUTH4", "NORTH4", "NORTH1", "NORTH2", "NORTH3")
k <- data.frame(matrix(0, nrow = 30, ncol = 9))
k[,1:4] <- c(2, 1, 4, 8, 9, 15, 18, 20, 22, 23, 28:31, 36, 44:49, 51, 55:62)
k[,5] <- c(1, 2, 4, 9, 10, 16, 19, 21, 23, 24, 29:32, 37, 46, 51:55, 57, 62:69)
k[,6] <- c(1, 2, 4, 9, 10, 16, 19, 21, 23, 24, 29:32, 37, 46, 51:55, 57, 61:68)
k[,7] <- c(2, 1, 4, 9, 10, 16, 19, 21, 23, 24, 29:32, 36, 45, 50:54, 56, 60:67)
k[,8] <- c(2, 1, 4, 9, 10, 16, 19, 21, 23, 24, 29:32, 37, 46, 51:55, 57, 61:68)
k[,9] <- c(1, 2, 4, 9, 10, 16, 19, 21, 23, 24, 29:32, 37, 46, 51:55, 57, 61:68)
Year <- c(2005:2013)
for(i in 1:9){
Data[[i]] <- Data[[i]][,k[,i]]
colnames(Data[[i]]) <- c("Dist_Name", "School_Code", "Block_Name", "Rural_Urban", "Medium", "Sch_Management", "Sch_Category", "School_Type", "No_of_Working_Days", "No_of_Acad_Inspection", "School_Dev_Grant_Recd", "School_Dev_Grant_Expnd", "TLM_Grant_Recd", "TLM_Grant_Expnd", "Tot_Clrooms", "Toilet_Girls", "Electricity", "Boundary_Wall", "Library", "PlayGround", "Blackboard", "Drinking_Water", "Male_Tch", "Female_Tch", "NoResp_Tch", "Head_Teacher", "Graduate_Teachers", "Tch_with_Prof_Qual", "Days_involved_in_non_tch_assgn", "Teachers_involved_in_non_tch_assgn")
Data[[i]] <- na.zero(Data[[i]])
Data[[i]]$acyear <- Year[i]
}
lookup <- unique(Data[[9]][,c(1, 3)])
Data <- ldply(Data)
#Data <- droplevels(subset(Data, eval(is.element(Data$Sch_Category, category))))
Data <- droplevels(subset(Data, eval(is.element(Data$Block_Name, taluk.all))))
Data <- droplevels(subset(Data, eval(is.element(Data$Block_Name, exclude) == 0)))
Data[Data$Toilet_Girls >= 1, 16] = 1
Data[eval(Data$Electricity == 2 | Data$Electricity == 3), 17] = 0
Data[Data$Library == 2, 19] = 0
Data[Data$PlayGround == 2, 20] = 0
Data[Data$Rural_Urban == 2, 4] = 0
Data$Public <- rep(0, nrow(Data))
Data[is.element(Data[,6], manage), 32] = 1
Data$Split <- rep(0, nrow(Data))
Data[is.element(Data[,3], taluk), 33] = 1
#casting
Schoolcode <- Data[, c(3, 31, 2)]
Schoolcode <- cast(Schoolcode, Block_Name ~ acyear, length)
Schoolcode <- data.frame(merge(lookup, Schoolcode, by = "Block_Name"))
colnames(Schoolcode) <- c("Taluk", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013")
View(Schoolcode)
write.csv(Schoolcode, "Z3-TalukSchoolNo")
#write.csv(Schoolcode, "Z3-TalukSchoolNo.csv")
write.csv(Schoolcode, "Z3-TalukSchoolNo.csv")
Files <- list.files(pattern = "*.csv")
#From this point on:
#
#Everything that exists is an object.
#Everything that happens is a function call.
##*****OK! This file is a mess. But it works. Well, it worked. Not so sure anymore.*****##
setwd("D:/Share Point/OneDrive/Comprehensive Exam - Data files/Census")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(DataCombine)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
Block <- ldply(lapply(Files[28], read.csv, strip.white = TRUE))
Data <- ldply(lapply(Files[1:27], read.csv, strip.white = TRUE))
Data <- droplevels(subset(Data, eval(LEVEL == "TALUK")))[,-c(0:7)]
Data <- FindReplace(data = Data, Var = "NAME", replaceData = Block, from = "Old", to = "New", exact = TRUE)
Data <- droplevels(subset(Data, eval(is.element(NAME, Block[,2]))))
Total <- droplevels(subset(Data, eval(Data$TRU == "Total")))
Total$SCST <- Total$P_SC + Total$P_ST
Total <- Total[, c(1, 3, 4, 7, 16, 22, 58)]
colnames(Total) <- c("Block_Name", "Households", "TotPop", "Pop0-6", "Literates", "TotWPop", "SCST")
#write.csv(Total, "Z1-Census2001.csv")
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[29], read.csv, strip.white = TRUE))[,-1]
Dataset <- read.csv("D:/Share Point/OneDrive/GitHub/greek-salad/timey-wimey.csv")
Dataset <- droplevels(subset(Dataset, eval(Year == 2005)))
#Dataset <- FindReplace(data = Dataset, Var = "Block_Name", replaceData = Block, from = "Old", to = "New", exact = TRUE)
Dataset <- data.frame(merge(Dataset, Data, by = "Block_Name"))
Schools <- ldply(lapply(Files[30], read.csv, strip.white = TRUE))[,-1]
View(Schools)
colnames(Schools)[1] <- "Block_Name"
Dataset <- data.frame(merge(Dataset, Schools, by = "Block_Name"))
write.csv(Dataset, "D:/Share Point/OneDrive/GitHub/greek-salad/Z0-Baseline.csv")
Dataset$SchoolperPop2005 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2005 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2005 <- rep(0, nrow(Dataset))for (i in 1:9) {
Dataset$SchoolperPop2005 <- rep(0, nrow(Dataset))}
Dataset$SchoolperPop2005 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2006 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2007 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2008 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2009 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2010 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2011 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2012 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2013 <- rep(0, nrow(Dataset))
View(Dataset)
colnames(Datast)
colnames(Dataset)
for (i in 39:47) {
Dataset[,47+i] <- Dataset[,i]/Dataset[,33]
}
for (i in 39:47) {
Dataset[,9+i] <- Dataset[,i]/Dataset[,33]
}
View(Dataset)
for (i in 39:47) {
Dataset[,9+i] <- Dataset[,i]*1000/Dataset[,33]
}
View(Dataset)
write.csv(Dataset, "D:/Share Point/OneDrive/GitHub/greek-salad/Z0-Baseline.csv")
#Everything that exists is an object.
#Everything that happens is a function call.
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
#Summary Table
Appendix <- ldply(lapply(Files[1], read.csv))[,-1]
stargazer(Appendix, title = "No of Schools District-wise, across the years", summary = FALSE, digits = 1, font.size = "footnotesize")
getwd()
setwd("D:/Share Point/OneDrive/GitHub/greek-salad")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
#Summary Table
Appendix <- ldply(lapply(Files[1], read.csv))[,-1]
stargazer(Appendix, title = "No of Schools District-wise, across the years", summary = FALSE, digits = 1, font.size = "footnotesize")
Data <- ldply(lapply(Files[6], read.csv))
View(Data)
Data <- ldply(lapply(Files[6], read.csv))[,-c(1,3)]
View(Data)
colnames(Data)
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop""SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop""SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
#Summary Statistics
#Baseline
Summ <- aggregate(Data, by = list(Data$Year, Data$Split), mean)
View(Summ)
Data <- ldply(lapply(Files[6], read.csv))[,-c(1,3)]
View(Data)
colnames(Data)
Data$Split
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
colnames(Data)
Data <- ldply(lapply(Files[6], read.csv))[,-c(1,3, 30)]
colnames(Data)
Data <- ldply(lapply(Files[6], read.csv))[,-c(1,3, 30)]
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
Summ <- aggregate(Data, by = list(Data$Year, Data$Split), mean)
View(Summ)
Summ <- aggregate(Data, by = list(Data$Year, Data$Split), mean)[,c(1:3)]
Data <- ldply(lapply(Files[6], read.csv))[,-c(1,3, 30)]
#The variable all.taluks is from the environment of CensusPrep.R - Run that first! (or read it in from Z2.csv)
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
#Summary Statistics
#Baseline
Summ <- aggregate(Data, by = list(Data$Year, Data$Split), mean)[,c(1:3)]
View(Summ)
Summ <- aggregate(Data, by = list(Data$Year, Data$Split), mean)[,-c(1:3)]
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean)[,-c(1:3)])
View(Summ)
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
Summ <- Summ[-c(1:10, 12),]
colnames(Summ) <- c("Undivided", "Divided")
View(Summ)
rownames(Summ)
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
Summ <- Summ[-c(1:10, 12, 27, 29:36, 38:45),]
colnames(Summ) <- c("Undivided", "Divided")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2005", summary = NULL)
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
rownames(Summ)
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
Summ <- Summ[-c(1:10, 12, 38, 40:47, 49:56),]
colnames(Summ) <- c("Undivided", "Divided")
stargazer(Summ, title = "Summary Statistics in 2005", summary = NULL)
stargazer(Summ, title = "Summary Statistics in 2005", summary = NULL, digits = 1)
Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
Within$New <- rep(0, nrow(Within))
Within[is.element(Within$Block_Name, new), 30] = 1
Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
Within$New <- rep(0, nrow(Within))
View(Within)
Within[is.element(Within$Block_Name, new), 55] = 1
View(Within)
Summ <- aggregate(Within, by = list(Within$Year, Within$New), mean)
Summ <- t(aggregate(Within, by = list(Within$Year, Within$New), mean))
Summ <- Summ[-c(1:10, 12, 38, 40:47, 49:56),]
colnames(Summ) <- c("Old", "New")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2005", summary = NULL)
source('D:/Share Point/OneDrive/GitHub/greek-salad/CensusPrep.R')
#From this point on:
#
#Everything that exists is an object.
#Everything that happens is a function call.
##*****OK! This file is a mess. But it works. Well, it worked. Not so sure anymore.*****##
setwd("D:/Share Point/OneDrive/Comprehensive Exam - Data files/Census 2011, Karnataka/CSV")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(DataCombine)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
Block <- read.csv("D:/Share Point/OneDrive/Comprehensive Exam - Data files/Census/Z0-Match.csv")
Data <- ldply(lapply(Files[1:30], read.csv, strip.white = TRUE))
Data <- droplevels(subset(Data, eval(Level == "CD BLOCK")))[,-c(0:9)]
View(Data)
Block <- read.csv("D:/Share Point/OneDrive/Comprehensive Exam - Data files/Census/Z0-Match.csv")
Data <- ldply(lapply(Files[1:30], read.csv, strip.white = TRUE))
View(Data)
Data <- droplevels(subset(Data, eval(Level == "CD BLOCK")))[,-c(1:9)]
Data <- FindReplace(data = Data, Var = "Name", replaceData = Block, from = "Old", to = "New", exact = TRUE)
View(Data)
View(Block)
Data <- droplevels(subset(Data, eval(is.element(Name, Block[,2]))))
View(Data)
Total <- droplevels(subset(Data, eval(Data$Total.Rural.Urban == "Total")))
Total$SCST <- Total$Scheduled.Castes.population.Person + Total$Scheduled.Tribes.population.Person
Total <- Total[, c(1, 3, 4, 7, 16, 22, 88)]
colnames(Total) <- c("Block_Name", "Households", "TotPop", "Pop0-6", "Literates", "TotWPop", "SCST")
write.csv(Total, "Z1-Census2011.csv")
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[31], read.csv, strip.white = TRUE))[,-1]
Dataset <- read.csv("D:/Share Point/OneDrive/GitHub/greek-salad/timey-wimey.csv")
Dataset <- droplevels(subset(Dataset, eval(Year == 2013)))
Dataset <- data.frame(merge(Dataset, Data, by = "Block_Name"))
Schools <- read.csv("D:/Share Point/OneDrive/GitHub/greek-salad/SchoolNo")[,-1]
Schools <- read.csv("D:/Share Point/OneDrive/GitHub/greek-salad/SchoolNo.csv")[,-1]
colnames(Schools)[1] <- "Block_Name"
Dataset <- data.frame(merge(Dataset, Schools, by = "Block_Name"))
#From this point on:
#
#Everything that exists is an object.
#Everything that happens is a function call.
##*****OK! This file is a mess. But it works. Well, it worked. Not so sure anymore.*****##
setwd("D:/Share Point/OneDrive/Comprehensive Exam - Data files/Census 2011, Karnataka/CSV")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(DataCombine)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
Block <- read.csv("D:/Share Point/OneDrive/Comprehensive Exam - Data files/Census/Z0-Match.csv")
Data <- ldply(lapply(Files[1:30], read.csv, strip.white = TRUE))
Data <- droplevels(subset(Data, eval(Level == "CD BLOCK")))[,-c(1:9)]
Data <- FindReplace(data = Data, Var = "Name", replaceData = Block, from = "Old", to = "New", exact = TRUE)
Data <- droplevels(subset(Data, eval(is.element(Name, Block[,2]))))
Total <- droplevels(subset(Data, eval(Data$Total.Rural.Urban == "Total")))
Total$SCST <- Total$Scheduled.Castes.population.Person + Total$Scheduled.Tribes.population.Person
Total <- Total[, c(1, 3, 4, 7, 16, 22, 88)]
colnames(Total) <- c("Block_Name", "Households", "TotPop", "Pop0-6", "Literates", "TotWPop", "SCST")
#write.csv(Total, "Z1-Census2011.csv")
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[31], read.csv, strip.white = TRUE))[,-1]
Dataset <- read.csv("D:/Share Point/OneDrive/GitHub/greek-salad/timey-wimey.csv")
Dataset <- droplevels(subset(Dataset, eval(Year == 2013)))
#Dataset <- FindReplace(data = Dataset, Var = "Block_Name", replaceData = Block, from = "Old", to = "New", exact = TRUE)
Dataset <- data.frame(merge(Dataset, Data, by = "Block_Name"))
#From this point on:
#
#Everything that exists is an object.
#Everything that happens is a function call.
##*****OK! This file is a mess. But it works. Well, it worked. Not so sure anymore.*****##
setwd("D:/Share Point/OneDrive/Comprehensive Exam - Data files/Census 2011, Karnataka/CSV")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(DataCombine)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
Schools <- ldply(lapply(Files[32], read.csv, strip.white = TRUE))[,-1]
colnames(Schools)[1] <- "Block_Name"
Dataset <- data.frame(merge(Dataset, Schools, by = "Block_Name"))
write.csv(Dataset, "D:/Share Point/OneDrive/GitHub/greek-salad/Z2-Endline.csv")
Dataset$SchoolperPop2005 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2006 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2007 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2008 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2009 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2010 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2011 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2012 <- rep(0, nrow(Dataset))
Dataset$SchoolperPop2013 <- rep(0, nrow(Dataset))
for (i in 39:47) {
Dataset[,9+i] <- Dataset[,i]*1000/Dataset[,33]
}
write.csv(Dataset, "D:/Share Point/OneDrive/GitHub/greek-salad/Z2-Endline.csv")
source('D:/Share Point/OneDrive/GitHub/greek-salad/Census2011.R')
source('D:/Share Point/OneDrive/GitHub/greek-salad/Census2011.R')
#Everything that exists is an object.
#Everything that happens is a function call.
setwd("D:/Share Point/OneDrive/GitHub/greek-salad")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
Files
Data <- ldply(lapply(Files[6], read.csv))[,-c(1,3, 30)]
#The variable all.taluks is from the environment of CensusPrep.R - Run that first! (or read it in from Z2.csv)
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
#Summary Statistics
#Baseline
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
Summ <- Summ[-c(1:10, 12, 38, 40:47, 49:56),]
colnames(Summ) <- c("Undivided", "Divided")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2005", summary = NULL, digits = 1)
Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
Within$New <- rep(0, nrow(Within))
Within[is.element(Within$Block_Name, new), 55] = 1
#Baseline
Summ <- t(aggregate(Within, by = list(Within$Year, Within$New), mean))
Summ <- Summ[-c(1:10, 12, 38, 40:47, 49:56),]
colnames(Summ) <- c("Old", "New")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2005", summary = NULL)
#Endline
Data <- ldply(lapply(Files[8], read.csv))[,-c(1,3, 30)]
#The variable all.taluks is from the environment of CensusPrep.R - Run that first! (or read it in from Z2.csv)
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
Summ <- Summ[-c(1:10, 12, 38, 40:47, 49:56),]
colnames(Summ) <- c("Undivided", "Divided")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2013", summary = NULL, digits = 1)
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
rownames(Summ)
Summ <- Summ[-c(1:10, 12, 38:46, 48:55),]
colnames(Summ) <- c("Undivided", "Divided")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2013", summary = NULL, digits = 1)
Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
Within$New <- rep(0, nrow(Within))
Within[is.element(Within$Block_Name, new), 55] = 1
source('D:/Share Point/OneDrive/GitHub/greek-salad/Regressions.R')
Data <- ldply(lapply(Files[6], read.csv))[,-c(1, 3)]
colnames(Data)
m.out <- matchit(Split ~ Total + Yr2005 + Female_Tch + Electricity + Public + Graduate_Teachers + Households + Pop0.6 + Literates + SCST, data = Data, method = "nearest", ratio = 1, discard = "both")
#summary(m.out)
plot(m.out, type = "jitter")
match <- match.data(m.out)
plot(m.out, type = "hist")
plot(m.out, type = "jitter")
m.out <- matchit(Split ~ Total + SchoolperPop2005 + Female_Tch + Electricity + Public + Graduate_Teachers + Households + Pop0.6 + Literates + SCST, data = Data, method = "nearest", ratio = 1, discard = "both")
#summary(m.out)
plot(m.out, type = "jitter")
match <- match.data(m.out)
write.csv(match, "Z1-Matched.csv")
plot(m.out, type = "hist")
Data <- ldply(lapply(Files[5], read.csv))[,-c(1, 29)]
#The variable all.taluks is from the environment of CensusPrep.R - Run that first! (or read it in from Z2.csv)
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split")
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
#Summary Statistics
#Baseline
Summ <- aggregate(Data, by = list(Data$Year, Data$Split), mean)
Summ <- t(droplevels(subset(Summ, eval(Year == 2005))))
Summ <- Summ[-c(1:10, 12),]
colnames(Summ) <- c("Undivided", "Divided")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2005", summary = NULL)
Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
Within$New <- rep(0, nrow(Within))
Within[is.element(Within$Block_Name, new), 30] = 1
#Baseline
Summ <- aggregate(Within, by = list(Within$Year, Within$New), mean)
Summ <- t(droplevels(subset(Summ, eval(Year == 2005))))
Summ <- Summ[-c(1:10, 12),]
colnames(Summ) <- c("Old", "New")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2005", summary = NULL)
#Endline
Summ <- aggregate(Data, by = list(Data$Year, Data$Split), mean)
Summ <- t(droplevels(subset(Summ, eval(Year == 2013))))
Summ <- Summ[-c(1:10, 12),]
colnames(Summ) <- c("Undivided", "Divided")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2013", summary = NULL)
Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
Within$New <- rep(0, nrow(Within))
Within[is.element(Within$Block_Name, new), 30] = 1
#Baseline
Summ <- aggregate(Within, by = list(Within$Year, Within$New), mean)
Summ <- t(droplevels(subset(Summ, eval(Year == 2013))))
Summ <- Summ[-c(1:10, 12),]
colnames(Summ) <- c("Old", "New")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2013", summary = NULL)
fit.total <- lm(TotalMarks ~ Split*Year, Data)
fit.WDays <- lm(WorkDays ~ Split*Year, Data)
fit.AcdInsp <- lm(AcadInsp ~ Split*Year, Data)
fit.DevGrant <- lm(DevGrantR ~ Split*Year, Data)
stargazer(fit.total, fit.WDays, fit.DevGrant, fit.AcdInsp, digits = 1, df = FALSE)
fit.TLM <- lm(TLMGrantR ~ Split*Year, Data)
fit.Class <- lm(Classrooms ~ Split*Year, Data)
fit.Toilet <- lm(ToiletG ~ Split*Year, Data)
fit.Elect <- lm(Electricity ~ Split*Year, Data)
stargazer(fit.TLM, fit.Class, fit.Toilet, fit.Elect, digits = 1, df = FALSE)
fit.male <- lm(Male_Tch ~ Split*Year, Data)
fit.fem <- lm(Female_Tch ~ Split*Year, Data)
fit.grad <- lm(Grad_Tch ~ Split*Year, Data)
fit.prof <- lm(ProfQ_Tch ~ Split*Year, Data)
stargazer(fit.male, fit.fem, fit.grad, fit.prof, digits = 1, df = FALSE)
fit.public <- lm(Public ~ Split*Year, Data)
fit.nonTch <- lm(Days_nonTch ~ Split*Year, Data)
fit.libr <- lm(Library ~ Split*Year, Data)
stargazer(fit.public, fit.nonTch, fit.libr, digits = 1, df = FALSE)
