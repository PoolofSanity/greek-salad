legend(2011,330, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
legend(2006,450, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
#Plots
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(5)], read.csv))[,-c(1, 29)]
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split")
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
School <- ldply(lapply(Files[c(9)], read.csv))
Data <- merge(Data, School, by = c("Block_Name", "Year"))
Data <- Data[,c(1, 2, 29, 31, 32, 30, 9)]
Assort.Ctrl1 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl1)[1:2] <- c("Split", "Year")
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
Assort.Ctrl2 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl2)[1:2] <- c("Split", "Year")
par(mfrow = c(1, 1))
plot(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(0,14000), col = "blue")
lines(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(SchoolGrant ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2011,7000, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
par(mfrow = c(1, 1))
plot(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(200, 500), col = "blue")
lines(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(Schools ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2006,450, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
#Plots
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(5)], read.csv))[,-c(1, 29)]
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split")
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
School <- ldply(lapply(Files[c(9)], read.csv))
Data <- merge(Data, School, by = c("Block_Name", "Year"))
Data <- Data[,c(1, 2, 29, 31, 32, 30, 9)]
Assort.Ctrl1 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl1)[1:2] <- c("Split", "Year")
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
Assort.Ctrl2 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl2)[1:2] <- c("Split", "Year")
par(mfrow = c(1, 1))
plot(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(0,14000), col = "blue")
lines(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(SchoolGrant ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2011,7000, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
par(mfrow = c(1, 1))
plot(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(200, 500), col = "blue")
lines(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(Schools ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2005,500, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
#Plots
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(5)], read.csv))[,-c(1, 29)]
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split")
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
School <- ldply(lapply(Files[c(9)], read.csv))
Data <- merge(Data, School, by = c("Block_Name", "Year"))
Data <- Data[,c(1, 2, 29, 31, 32, 30, 9)]
Assort.Ctrl1 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl1)[1:2] <- c("Split", "Year")
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
Assort.Ctrl2 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl2)[1:2] <- c("Split", "Year")
par(mfrow = c(1, 1))
plot(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(4000,14000), col = "blue")
lines(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(SchoolGrant ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2011,7000, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
par(mfrow = c(1, 1))
plot(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(200, 500), col = "blue")
lines(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(Schools ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2005,500, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
#Plots
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(5)], read.csv))[,-c(1, 29)]
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split")
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
School <- ldply(lapply(Files[c(9)], read.csv))
Data <- merge(Data, School, by = c("Block_Name", "Year"))
Data <- Data[,c(1, 2, 29, 31, 32, 30, 9)]
Assort.Ctrl1 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl1)[1:2] <- c("Split", "Year")
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
Assort.Ctrl2 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl2)[1:2] <- c("Split", "Year")
par(mfrow = c(1, 1))
plot(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(4000,14000), col = "blue")
lines(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(SchoolGrant ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2011,7500, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
par(mfrow = c(1, 1))
plot(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(200, 500), col = "blue")
lines(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(Schools ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2005,500, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
#Plots
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(5)], read.csv))[,-c(1, 29)]
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split")
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
School <- ldply(lapply(Files[c(9)], read.csv))
Data <- merge(Data, School, by = c("Block_Name", "Year"))
Data <- Data[,c(1, 2, 29, 31, 32, 30, 9)]
Assort.Ctrl1 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl1)[1:2] <- c("Split", "Year")
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
Assort.Ctrl2 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl2)[1:2] <- c("Split", "Year")
par(mfrow = c(1, 1))
plot(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(4000,14000), col = "blue")
lines(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(SchoolGrant ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2011,8000, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
par(mfrow = c(1, 1))
plot(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(200, 500), col = "blue")
lines(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(Schools ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2005,500, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
fit.DevGrant <- lm(ln(DevGrantR) ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.DevGrant <- lm(log(DevGrantR) ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
#Regression Models
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(6,8)], read.csv))[,-c(1, 3, 30)]
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
Data$Post <- rep(0, nrow(Data))
Data[Data$Year == 2013, 55] = 1
Data$SchoolNo <- Data$SchoolperPop2013 - Data$SchoolperPop2005
Data$Literacy <- (Data$Literates/Data$TotPop)*100
Data$YoungPop <- (Data$Pop0.6/Data$TotPop)*100
Distpop <- ldply(lapply(Files[14], read.csv))
Data <- merge(Data, Distpop, by = "District")
cor(Data$Split, Data$Population.2001)
probit.split <- glm(Split ~ Population.2001, data = Data, family=binomial(link="probit"), subset = eval(Data$Year == 2005))
stargazer(probit.split)
iv.school <- ivreg(SchoolperPop2013 ~ Split + Literacy + YoungPop, instruments = ~ Population.2001 + Literacy + YoungPop, Data, subset = eval(Data$Year == 2013))
stargazer(iv.school, type = "text")
#Funding related variables
fit.School <- lm(SchoolNo ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.public <- lm(Public ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.DevGrant <- lm(log(DevGrantR) ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.TLM <- lm(TLMGrantR ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.School, fit.public, fit.DevGrant, fit.TLM, digits = 1, df = FALSE)
#Infrastructure related variables
fit.Class <- lm(Classrooms ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.Toilet <- lm(ToiletG ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.Elect <- lm(Electricity ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.libr <- lm(Library ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.Class, fit.Toilet, fit.Elect, fit.libr, digits = 1, df = FALSE)
#Teaching resources related variables
fit.male <- lm(Male_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.fem <- lm(Female_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.grad <- lm(Grad_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.prof <- lm(ProfQ_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.male, fit.fem, fit.grad, fit.prof, digits = 1, df = FALSE)
#Organization related variables
fit.WDays <- lm(WorkDays ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.AcdInsp <- lm(AcadInsp ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.nonTch <- lm(Days_nonTch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.scores <- lm(TotalMarks ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.WDays, fit.nonTch, fit.AcdInsp, fit.scores, digits = 1, df = FALSE)
stargazer(fit.DevGrant, type = "text")
fit.DevGrant <- lm((DevGrantR) ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.DevGrant, type = "text")
#From this point on:
#
#Everything that exists is an object.
#Everything that happens is a function call.
##*****OK! This file is a mess. But it works. Well, it worked. Not so sure anymore.*****##
setwd("D:/Share Point/OneDrive/Comprehensive Exam - Data files/Census")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(DataCombine)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[1:27], read.csv, strip.white = TRUE))
Data <- droplevels(subset(Data, eval(LEVEL == "TALUK")))[,-c(0:7)]
Total <- droplevels(subset(Data, eval(Data$TRU == "Total")))
# Chunk 1: App0
#Everything that exists is an object.
#Everything that happens is a function call.
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(optmatch)
library(AER)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
# Chunk 2: App1
#Summary Table
Appendix <- ldply(lapply(Files[1], read.csv))[,-1]
stargazer(Appendix, title = "No of Schools District-wise, across the years", summary = FALSE, digits = 1, font.size = "footnotesize")
# Chunk 1: App0
#Everything that exists is an object.
#Everything that happens is a function call.
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(optmatch)
library(AER)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
# Chunk 2: App1
#Summary Table
Appendix <- ldply(lapply(Files[1], read.csv))[,-1]
stargazer(Appendix, title = "No of Schools District-wise, across the years", summary = FALSE, digits = 1, font.size = "footnotesize")
setwd(""D:/Share Point/OneDrive/GitHub/greek-salad"")
setwd("D:/Share Point/OneDrive/GitHub/greek-salad")
# Chunk 1: App0
#Everything that exists is an object.
#Everything that happens is a function call.
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(optmatch)
library(AER)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
# Chunk 2: App1
#Summary Table
Appendix <- ldply(lapply(Files[1], read.csv))[,-1]
stargazer(Appendix, title = "No of Schools District-wise, across the years", summary = FALSE, digits = 1, font.size = "footnotesize")
# Chunk 3: App2
#With Unmatched Data
Data <- ldply(lapply(Files[6], read.csv))[,-c(1,3, 30)]
#The variable all.taluks is from the environment of CensusPrep.R - Run that first! (or read it in from Z2.csv)
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
#Summary Statistics
#Baseline
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
Summ <- Summ[-c(1:10, 12, 38, 40:47, 49:56),]
colnames(Summ) <- c("Undivided", "Divided")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2005", summary = NULL, digits = 1, notes = "Population figures used to calculate SchoolperPop2005 is from 2001")
#Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
#Within$New <- rep(0, nrow(Within))
#Within[is.element(Within$Block_Name, new), 55] = 1
#z <- c(9, 11:18, 20:28, 30:35, 37, 46)
#pvalue <- numeric()
#t.list <- list()
#for(i in z){
#  t.list[[i]] <- t.test(Within[Within$New == 1, i], Within[Within$New == 0, i])
#  pvalue[i+2] <- t.list[[i]]$p.value
#}
##Baseline
#Summ <- t(aggregate(Within, by = list(Within$Year, Within$New), mean))
#pvalue[49:57] <- "-"
#Summ <- cbind(Summ, pvalue)
#Summ <- data.frame(Summ[-c(1:10, 12, 38, 40:47, 49:56),])
#colnames(Summ) <- c("Old", "New", "p-value")
#write.csv(Summ, "Z4-summarystat2005.csv")
#
Summ <- ldply(lapply(Files[10], read.csv))
stargazer(Summ, summary = FALSE, title = "Summary Statistics in 2005", digits = 2, notes = "Population figures used to calculate SchoolperPop2005 is from 2001")
# Chunk 4: App3
#Endline
Data <- ldply(lapply(Files[8], read.csv))[,-c(1,3, 30)]
#The variable all.taluks is from the environment of CensusPrep.R - Run that first! (or read it in from Z2.csv)
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
#Summary Statistics
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
Summ <- Summ[-c(1:10, 12, 38, 40:47, 49:56),]
colnames(Summ) <- c("Undivided", "Divided")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2013", summary = NULL, digits = 1, notes = "Population figures used to calculate SchoolperPop2005 is from 2001")
#Endline
#Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
#Within$New <- rep(0, nrow(Within))
#Within[is.element(Within$Block_Name, new), 55] = 1
#z <- c(9, 11:18, 20:28, 30:35, 37, 46)
#pvalue <- numeric()
#t.list <- list()
#for(i in z){
#  t.list[[i]] <- t.test(Within[Within$New == 1, i], Within[Within$New == 0, i])
#  pvalue[i+2] <- t.list[[i]]$p.value
#}
##Baseline
#Summ <- t(aggregate(Within, by = list(Within$Year, Within$New), mean))
#pvalue[49:57] <- "-"
#Summ <- cbind(Summ, pvalue)
#Summ <- data.frame(Summ[-c(1:10, 12, 38, 40:47, 49:56),])
#colnames(Summ) <- c("Old", "New", "p-value")
#write.csv(Summ, "Z5-summarystat2013.csv")
#Print the Summary Stats
Summ <- ldply(lapply(Files[11], read.csv))
stargazer(Summ, title = "Summary Statistics in 2013", summary = FALSE, digits = 2, notes = "Population figures used to calculate SchoolperPop2013 is from 2001")
# Chunk 5: App4
##With Matched Data
Data <- ldply(lapply(Files[6], read.csv))[,-c(1, 3)]
m.out <- matchit(Split ~ Total + SchoolperPop2005 + Female_Tch + Electricity + Public + Graduate_Teachers + Households + Pop0.6 + Literates + SCST, data = Data, method = "nearest", ratio = 1, discard = "both")
#summary(m.out)
#plot(m.out, type = "jitter")
match <- match.data(m.out)
#write.csv(match, "Z1-Matched.csv")
#plot(m.out, type = "hist")
# Chunk 6: App5
#With matched Data
Data <- ldply(lapply(Files[6], read.csv))[,-c(1,3, 30)]
#The variable all.taluks is from the environment of CensusPrep.R - Run that first! (or read it in from Z1-Matched.csv)
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
#Summary Statistics
#Baseline
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
Summ <- Summ[-c(1:10, 12, 38, 40:47, 49:56),]
colnames(Summ) <- c("Undivided", "Divided")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2005 - With PS Matched Control Group", summary = NULL, digits = 1, notes = "Population figures used to calculate SchoolperPop2005 is from 2001")
#Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
#Within$New <- rep(0, nrow(Within))
#Within[is.element(Within$Block_Name, new), 55] = 1
#z <- c(9, 11:18, 20:28, 30:35, 37, 46)
#pvalue <- numeric()
#t.list <- list()
#for(i in z){
#  t.list[[i]] <- t.test(Within[Within$New == 1, i], Within[Within$New == 0, i])
#  pvalue[i+2] <- t.list[[i]]$p.value
#}
##Baseline
#Summ <- t(aggregate(Within, by = list(Within$Year, Within$New), mean))
#pvalue[49:57] <- "-"
#Summ <- cbind(Summ, pvalue)
#Summ <- data.frame(Summ[-c(1:10, 12, 38, 40:47, 49:56),])
#colnames(Summ) <- c("Old", "New", "p-value")
#write.csv(Summ, "Z6-summarystat2005PS.csv")
Summ <- ldply(lapply(Files[12], read.csv))
stargazer(Summ, title = "Summary Statistics in 2005 - With PS Matched Control Group", summary = FALSE, digits = 1, notes = "Population figures used to calculate SchoolperPop2005 is from 2001")
# Chunk 7: App6
#With matched data
#Endline
Data <- ldply(lapply(Files[8], read.csv))[,-c(1,3, 30)]
#The variable all.taluks is from the environment of CensusPrep.R - Run that first! (or read it in from Z2.csv)
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
#Summary Statistics
#Baseline
Summ <- t(aggregate(Data, by = list(Data$Year, Data$Split), mean))
Summ <- Summ[-c(1:10, 12, 38:46, 48:55),]
colnames(Summ) <- c("Undivided", "Divided")
#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2013 - With PS Matched Control Group", summary = NULL, digits = 1, notes = "Population figures used to calculate SchoolperPop2013 is from 2001")
#Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
#Within$New <- rep(0, nrow(Within))
#Within[is.element(Within$Block_Name, new), 55] = 1
#z <- c(9, 11:18, 20:28, 30:35, 37, 46)
#pvalue <- numeric()
#t.list <- list()
#for(i in z){
#  t.list[[i]] <- t.test(Within[Within$New == 1, i], Within[Within$New == 0, i])
#  pvalue[i+2] <- t.list[[i]]$p.value
#}
##Baseline
#Summ <- t(aggregate(Within, by = list(Within$Year, Within$New), mean))
#pvalue[49:57] <- "-"
#Summ <- cbind(Summ, pvalue)
#Summ <- data.frame(Summ[-c(1:10, 12, 38, 40:47, 49:56),])
#colnames(Summ) <- c("Old", "New", "p-value")
#write.csv(Summ, "Z7-summarystat2013PS.csv")
#Print the Summary Stats
Summ <- ldply(lapply(Files[13], read.csv))
stargazer(Summ, title = "Summary Statistics in 2013 - With PS Matched Control Group", summary = FALSE, digits = 1, notes = "Population figures used to calculate SchoolperPop2013 is from 2001")
# Chunk 8: App7
#Regression Models
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(6,8)], read.csv))[,-c(1, 3, 30)]
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
Data$Post <- rep(0, nrow(Data))
Data[Data$Year == 2013, 55] = 1
Data$SchoolNo <- Data$SchoolperPop2013 - Data$SchoolperPop2005
Data$Literacy <- (Data$Literates/Data$TotPop)*100
Data$YoungPop <- (Data$Pop0.6/Data$TotPop)*100
Distpop <- ldply(lapply(Files[14], read.csv))
Data <- merge(Data, Distpop, by = "District")
#cor(Data$Split, Data$Population.2001)
probit.split <- glm(Split ~ Population.2001, data = Data, family=binomial(link="probit"), subset = eval(Data$Year == 2005))
stargazer(probit.split)
iv.school <- ivreg(SchoolperPop2013 ~ Split + Literacy + YoungPop, instruments = ~ Population.2001 + Literacy + YoungPop, Data, subset = eval(Data$Year == 2013))
#Funding related variables
fit.School <- lm(SchoolNo ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.public <- lm(Public ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.DevGrant <- lm(log(DevGrantR) ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.TLM <- lm(TLMGrantR ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.School, fit.public, fit.DevGrant, fit.TLM, digits = 1, df = FALSE)
#Infrastructure related variables
fit.Class <- lm(Classrooms ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.Toilet <- lm(ToiletG ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.Elect <- lm(Electricity ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.libr <- lm(Library ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.Class, fit.Toilet, fit.Elect, fit.libr, digits = 1, df = FALSE)
#Teaching resources related variables
fit.male <- lm(Male_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.fem <- lm(Female_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.grad <- lm(Grad_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.prof <- lm(ProfQ_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.male, fit.fem, fit.grad, fit.prof, digits = 1, df = FALSE)
#Organization related variables
fit.WDays <- lm(WorkDays ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.AcdInsp <- lm(AcadInsp ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.nonTch <- lm(Days_nonTch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.scores <- lm(TotalMarks ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.WDays, fit.nonTch, fit.AcdInsp, fit.scores, digits = 1, df = FALSE)
# Chunk 9: App8
# Chunk 10: App9
#Plots
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(5)], read.csv))[,-c(1, 29)]
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split")
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
School <- ldply(lapply(Files[c(9)], read.csv))
Data <- merge(Data, School, by = c("Block_Name", "Year"))
Data <- Data[,c(1, 2, 29, 31, 32, 30, 9)]
Assort.Ctrl1 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl1)[1:2] <- c("Split", "Year")
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
Assort.Ctrl2 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl2)[1:2] <- c("Split", "Year")
par(mfrow = c(1, 1))
plot(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(4000,14000), col = "blue")
lines(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(SchoolGrant ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2011,8000, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
par(mfrow = c(1, 1))
plot(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(200, 500), col = "blue")
lines(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(Schools ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2005,500, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
# Chunk 11: App10
#Regression Models
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(6,8)], read.csv))[,-c(1, 3, 30)]
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
Data$Post <- rep(0, nrow(Data))
Data[Data$Year == 2013, 55] = 1
Data$SchoolNo <- Data$SchoolperPop2013 - Data$SchoolperPop2005
Data$Literacy <- (Data$Literates/Data$TotPop)*100
Data$YoungPop <- (Data$Pop0.6/Data$TotPop)*100
Distpop <- ldply(lapply(Files[14], read.csv))
Data <- merge(Data, Distpop, by = "District")
#cor(Data$Split, Data$Population.2001)
probit.split <- glm(Split ~ Population.2001, data = Data, family=binomial(link="probit"), subset = eval(Data$Year == 2005))
stargazer(probit.split)
iv.school <- ivreg(SchoolperPop2013 ~ Split + Literacy + YoungPop, instruments = ~ Population.2001 + Literacy + YoungPop, Data, subset = eval(Data$Year == 2013))
#Funding related variables
fit.School <- lm(SchoolNo ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.public <- lm(Public ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.DevGrant <- lm(log(DevGrantR) ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.TLM <- lm(TLMGrantR ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.School, fit.public, fit.DevGrant, fit.TLM, digits = 1, df = FALSE)
#Infrastructure related variables
fit.Class <- lm(Classrooms ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.Toilet <- lm(ToiletG ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.Elect <- lm(Electricity ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.libr <- lm(Library ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.Class, fit.Toilet, fit.Elect, fit.libr, digits = 1, df = FALSE)
#Teaching resources related variables
fit.male <- lm(Male_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.fem <- lm(Female_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.grad <- lm(Grad_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.prof <- lm(ProfQ_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.male, fit.fem, fit.grad, fit.prof, digits = 1, df = FALSE)
#Organization related variables
fit.WDays <- lm(WorkDays ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.AcdInsp <- lm(AcadInsp ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.nonTch <- lm(Days_nonTch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.scores <- lm(TotalMarks ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.WDays, fit.nonTch, fit.AcdInsp, fit.scores, digits = 1, df = FALSE)
Data$SchoolGrant <- Data$DevGrantR + Data$TLMGrantR
fit.Grant <- lm(Grant ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.Grant <- lm(SchoolGrant ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
?stargazer
stargazer(fit.Grant, fit.School, fit.public, fit.Class, fit.Toilet, fit.Elect, fit.libr, digits = 1, df = FALSE, keep = c("Split", "Post", "Split:Post"))
