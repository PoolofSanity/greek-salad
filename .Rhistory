#Print the Summary Stats
stargazer(Summ, title = "Summary Statistics in 2013 - With PS Matched Control Group", summary = NULL, digits = 1, notes = "Population figures used to calculate SchoolperPop2013 is from 2001")
#Within <- droplevels(subset(Data, eval(is.element(Block_Name, union(old, new)))))
#Within$New <- rep(0, nrow(Within))
#Within[is.element(Within$Block_Name, new), 55] = 1
#z <- c(9, 11:18, 20:28, 30:35, 37, 46)
#pvalue <- numeric()
#t.list <- list()
#for(i in z){
#  t.list[[i]] <- t.test(Within[Within$New == 1, i], Within[Within$New == 0, i])
#  pvalue[i+2] <- t.list[[i]]$p.value
#}
##Baseline
#Summ <- t(aggregate(Within, by = list(Within$Year, Within$New), mean))
#pvalue[49:57] <- "-"
#Summ <- cbind(Summ, pvalue)
#Summ <- data.frame(Summ[-c(1:10, 12, 38, 40:47, 49:56),])
#colnames(Summ) <- c("Old", "New", "p-value")
#write.csv(Summ, "Z7-summarystat2013PS.csv")
#Print the Summary Stats
Summ <- ldply(lapply(Files[13], read.csv))
stargazer(Summ, title = "Summary Statistics in 2013 - With PS Matched Control Group", summary = FALSE, digits = 1, notes = "Population figures used to calculate SchoolperPop2013 is from 2001")
# Chunk 8: App7
#Regression Models
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(6,8)], read.csv))[,-c(1, 3, 30)]
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
Data$Post <- rep(0, nrow(Data))
Data[Data$Year == 2013, 55] = 1
Data$SchoolNo <- Data$SchoolperPop2013 - Data$SchoolperPop2005
Data$Literacy <- (Data$Literates/Data$TotPop)*100
Data$YoungPop <- (Data$Pop0.6/Data$TotPop)*100
Distpop <- ldply(lapply(Files[14], read.csv))
Data <- merge(Data, Distpop, by = "District")
#cor(Data$Split, Data$Population.2001)
probit.split <- glm(Split ~ Population.2001, data = Data, family=binomial(link="probit"), subset = eval(Data$Year == 2005))
stargazer(probit.split)
iv.school <- ivreg(SchoolperPop2013 ~ Split + Literacy + YoungPop, instruments = ~ Population.2001 + Literacy + YoungPop, Data, subset = eval(Data$Year == 2013))
#Funding related variables
fit.School <- lm(SchoolNo ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.public <- lm(Public ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.DevGrant <- lm(log(DevGrantR) ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.TLM <- lm(TLMGrantR ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.School, fit.public, fit.DevGrant, fit.TLM, digits = 1, df = FALSE)
#Infrastructure related variables
fit.Class <- lm(Classrooms ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.Toilet <- lm(ToiletG ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.Elect <- lm(Electricity ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.libr <- lm(Library ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.Class, fit.Toilet, fit.Elect, fit.libr, digits = 1, df = FALSE)
#Teaching resources related variables
fit.male <- lm(Male_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.fem <- lm(Female_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.grad <- lm(Grad_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.prof <- lm(ProfQ_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.male, fit.fem, fit.grad, fit.prof, digits = 1, df = FALSE)
#Organization related variables
fit.WDays <- lm(WorkDays ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.AcdInsp <- lm(AcadInsp ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.nonTch <- lm(Days_nonTch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.scores <- lm(TotalMarks ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.WDays, fit.nonTch, fit.AcdInsp, fit.scores, digits = 1, df = FALSE)
# Chunk 9: App8
# Chunk 10: App9
#Plots
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(5)], read.csv))[,-c(1, 29)]
#all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
#Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split")
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
School <- ldply(lapply(Files[c(9)], read.csv))
Data <- merge(Data, School, by = c("Block_Name", "Year"))
Data <- Data[,c(1, 2, 29, 31, 32, 30, 9)]
Assort.Ctrl1 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl1)[1:2] <- c("Split", "Year")
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
Assort.Ctrl2 <- aggregate(Data, by = list(Data$Split, Data$Year), mean)[,-c(3:6)]
colnames(Assort.Ctrl2)[1:2] <- c("Split", "Year")
par(mfrow = c(1, 1))
plot(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(4000,14000), col = "blue")
lines(SchoolGrant ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(SchoolGrant ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2011,8000, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
par(mfrow = c(1, 1))
plot(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 1, type = "l", ylim = c(200, 500), col = "blue")
lines(Schools ~ Year, data = Assort.Ctrl1, subset = Split == 0, col = "red")
lines(Schools ~ Year, data = Assort.Ctrl2, subset = Split == 0, col = "black")
legend(2005,500, c("Treatment", "Control-1", "Control-2"), lty =c(1,1), lwd=c(2.5,2.5),col=c("blue", "red", "black"))
# Chunk 11: App10
#Regression Models
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[c(6,8)], read.csv))[,-c(1, 3, 30)]
all.taluks <- ldply(lapply(Files[7], read.csv))[,2]
Data <- droplevels(subset(Data, eval(is.element(Block_Name, all.taluks))))
colnames(Data) <- c("Block_Name", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist_Name", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Households", "TotPop", "Pop0.6", "Literates", "TotWPop", "SCST", "District", "Yr2005", "Yr2006", "Yr2007", "Yr2008", "Yr2009", "Yr2010", "Yr2011", "Yr2012", "Yr2013", "SchoolperPop2005", "SchoolperPop2006", "SchoolperPop2007", "SchoolperPop2008", "SchoolperPop2009", "SchoolperPop2010", "SchoolperPop2011", "SchoolperPop2012", "SchoolperPop2013")
Data$Post <- rep(0, nrow(Data))
Data[Data$Year == 2013, 55] = 1
Data$SchoolNo <- Data$SchoolperPop2013 - Data$SchoolperPop2005
Data$Literacy <- (Data$Literates/Data$TotPop)*100
Data$YoungPop <- (Data$Pop0.6/Data$TotPop)*100
Distpop <- ldply(lapply(Files[14], read.csv))
Data <- merge(Data, Distpop, by = "District")
#cor(Data$Split, Data$Population.2001)
probit.split <- glm(Split ~ Population.2001, data = Data, family=binomial(link="probit"), subset = eval(Data$Year == 2005))
stargazer(probit.split)
iv.school <- ivreg(SchoolperPop2013 ~ Split + Literacy + YoungPop, instruments = ~ Population.2001 + Literacy + YoungPop, Data, subset = eval(Data$Year == 2013))
#Funding related variables
fit.School <- lm(SchoolNo ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.public <- lm(Public ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.DevGrant <- lm(log(DevGrantR) ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.TLM <- lm(TLMGrantR ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.School, fit.public, fit.DevGrant, fit.TLM, digits = 1, df = FALSE)
#Infrastructure related variables
fit.Class <- lm(Classrooms ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.Toilet <- lm(ToiletG ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.Elect <- lm(Electricity ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.libr <- lm(Library ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.Class, fit.Toilet, fit.Elect, fit.libr, digits = 1, df = FALSE)
#Teaching resources related variables
fit.male <- lm(Male_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.fem <- lm(Female_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.grad <- lm(Grad_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.prof <- lm(ProfQ_Tch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.male, fit.fem, fit.grad, fit.prof, digits = 1, df = FALSE)
#Organization related variables
fit.WDays <- lm(WorkDays ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.AcdInsp <- lm(AcadInsp ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.nonTch <- lm(Days_nonTch ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
fit.scores <- lm(TotalMarks ~ Split*Post + SchoolNo + Public + DevGrantR + TLMGrantR + Literacy + Data$YoungPop + Population.2001, Data)
stargazer(fit.WDays, fit.nonTch, fit.AcdInsp, fit.scores, digits = 1, df = FALSE)
Data$SchoolGrant <- Data$DevGrantR + Data$TLMGrantR
fit.Grant <- lm(Grant ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
fit.Grant <- lm(SchoolGrant ~ Split*Post + Literacy + Data$YoungPop + Population.2001, Data)
?stargazer
stargazer(fit.Grant, fit.School, fit.public, fit.Class, fit.Toilet, fit.Elect, fit.libr, digits = 1, df = FALSE, keep = c("Split", "Post", "Split:Post"))
df <- Data[, c(218, 159:186, 143:150, 207))]
stargazer(fit.Total, keep = "Bifurcated")
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
df <- Data[, c(217, 159:186, 143:150, 207)]
fit.grants <- lm(df)
stargazer(fit.scores, fit.school, fit.grants, keep = "Bifurcated")
fit.grants <- lm(log(SchoolGrant ~ .))
fit.grants <- lm(log(SchoolGrant) ~ .)
fit.grants <- lm(log(SchoolGrant) ~ ., data = df)
fit.grants <- lm(log(SchoolGrant) ~ ., data = df, na.rm = TRUE)
log(0)
unique(Data$SchoolGrant)
sort(unique(Data$SchoolGrant))
fit.grants <- lm(log(SchoolGrant) ~ ., data = df, subset = SchoolGrant != 0, na.rm = TRUE)
fit.grants <- lm(log(SchoolGrant) ~ ., data = df, subset = SchoolGrant != 0)
stargazer(fit.scores, fit.school, fit.grants, keep = "Bifurcated")
#Investment Variables
df <- Data[, c(218, 159:186, 143:150, 205)]
fit.public <- lm(df)
stargazer(fit.scores, fit.school, fit.grants, fit.public, keep = "Bifurcated")
stargazer(fit.scores, fit.school, fit.grants, fit.public, keep = "Bifurcated")
stargazer(fit.scores, fit.school, fit.grants, fit.public, keep = "Bifurcated", df = FALSE, digits = 1)
df <- Data[, c(205, 159:186, 143:150, 207)]
fit.public <- lm(df)
stargazer(fit.scores, fit.school, fit.grants, fit.public, keep = "Bifurcated", df = FALSE, digits = 1)
df <- Data[, c(195, 159:186, 143:150, 218, 217, 205, 207)]
fit.class <- lm(df)
df <- Data[, c(196, 159:186, 143:150, 218, 217, 205, 207)]
fit.toiletG <- lm(df)
stargazer(fit.scores, fit.school, fit.grants, fit.public, fit.class, fit.toiletG, keep = "Bifurcated", df = FALSE, digits = 1)
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
write.dta(Data, "Data.dta")
colnames(Data)
colnames(Data)[159] <- "Dist.BRural"
write.dta(Data, "Data.dta")
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
colnames(Data)
colnames(Data)[159] <- "Dist.BRural"
colnames(Data)
write.dta(Data, "Data.dta")
#Everything that exists is an object.
#Everything that happens is a function call.
setwd("D:/Share Point/OneDrive/GitHub/greek-salad")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(dummies)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[15], read.csv))[,-c(1, 29)]
colnames(Data) <- c("Block", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Bifurcated")
#Yadgir <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "YADAGIRI")))[,1]))
#Gulbarga <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "GULBARGA")))[,1]))
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
School <- ldply(lapply(Files[9], read.csv))[,-2]
colnames(School) <- c("Block", "Year", "Schools")
Data <- merge(Data, School, by = c("Block", "Year"))
Census <- ldply(lapply(Files[6], read.csv))[,c(2, 33:38)]
Census$Literacy <- Census$Literates/Census$TotPop
Census$Caste <- Census$SCST/Census$TotPop
colnames(Census)[1] <- "Block"
Data <- merge(Data, Census, by = "Block")
write.dta(Data, "Data.dta")
#Everything that exists is an object.
#Everything that happens is a function call.
setwd("D:/Share Point/OneDrive/GitHub/greek-salad")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(dummies)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[15], read.csv))[,-c(1, 29)]
colnames(Data) <- c("Block", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Bifurcated")
#Yadgir <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "YADAGIRI")))[,1]))
#Gulbarga <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "GULBARGA")))[,1]))
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
School <- ldply(lapply(Files[9], read.csv))[,-2]
colnames(School) <- c("Block", "Year", "Schools")
Data <- merge(Data, School, by = c("Block", "Year"))
Census <- ldply(lapply(Files[6], read.csv))[,c(2, 33:38)]
Census$Literacy <- Census$Literates/Census$TotPop
Census$Caste <- Census$SCST/Census$TotPop
colnames(Census)[1] <- "Block"
Data <- merge(Data, Census, by = "Block")
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
Data$SchoolNo <- Data$Schools*1000/Data$TotPop
write.dta(Data, "Data.dta")
stargazer(fit.scores, fit.school, fit.grants, fit.public, fit.class, fit.toiletG, fit.electricity, fit.libr, keep = "Bifurcated", df = FALSE, digits = 1, type = "text")
stargazer(fit.scores, fit.school, fit.grants, fit.public, fit.class, fit.toiletG, fit.electricity, fit.libr, df = FALSE, digits = 1, type = "text")#, keep = "Bifurcated"
stargazer(fit.scores, fit.school, fit.grants, fit.public, fit.class, fit.toiletG, fit.electricity, fit.libr, df = FALSE, digits = 1, type = "text", out = "file.txt")#, keep = "Bifurcated"
df <- Data[, c(157, 159:186, 143:150, 189:190, 195:205, 207, 217, 218)]
fit.scores <- lm(df)
#Investment Variables
df <- Data[, c(218, 159:186, 143:150, 207)]
fit.school <- lm(df)
df <- Data[, c(217, 159:186, 143:150, 207)]
fit.grants <- lm(log(SchoolGrant) ~ ., data = df, subset = SchoolGrant != 0)
df <- Data[, c(205, 159:186, 143:150, 207)]
fit.public <- lm(df)
df <- Data[, c(195, 159:186, 143:150, 218, 217, 205, 207)]
fit.class <- lm(df)
df <- Data[, c(196, 159:186, 143:150, 218, 217, 205, 207)]
fit.toiletG <- lm(df)
df <- Data[, c(197, 159:186, 143:150, 218, 217, 205, 207)]
fit.electricity <- lm(df)
df <- Data[, c(198, 159:186, 143:150, 218, 217, 205, 207)]
stargazer(fit.scores, fit.school, fit.grants, fit.public, fit.class, fit.toiletG, fit.electricity, fit.libr, df = FALSE, digits = 1, type = "text", out = "file.txt")#, keep = "Bifurcated"
fit.libr <- lm(df)
stargazer(fit.scores, fit.school, fit.grants, fit.public, fit.class, fit.toiletG, fit.electricity, fit.libr, df = FALSE, digits = 1, type = "text", out = "file.txt")#, keep = "Bifurcated"
colnames(Data)
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
colnames(Data)
?dummy.data.frame
Data <- dummy.data.frame(Data, names = c("Year", "Block", "Dist"), sep = ".", all = TRUE)
#Everything that exists is an object.
#Everything that happens is a function call.
setwd("D:/Share Point/OneDrive/GitHub/greek-salad")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(dummies)
library(multiwayvcov)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[15], read.csv))[,-c(1, 29)]
colnames(Data) <- c("Block", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Bifurcated")
#Yadgir <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "YADAGIRI")))[,1]))
#Gulbarga <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "GULBARGA")))[,1]))
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
School <- ldply(lapply(Files[9], read.csv))[,-2]
colnames(School) <- c("Block", "Year", "Schools")
Data <- merge(Data, School, by = c("Block", "Year"))
Census <- ldply(lapply(Files[6], read.csv))[,c(2, 33:38)]
Census$Literacy <- Census$Literates/Census$TotPop
Census$Caste <- Census$SCST/Census$TotPop
colnames(Census)[1] <- "Block"
Data <- merge(Data, Census, by = "Block")
#Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
#Data$SchoolNo <- Data$Schools*1000/Data$TotPop
#write.dta(Data, "Data.dta")
Data <- dummy.data.frame(Data, names = c("Year", "Block", "Dist"), sep = ".", all = TRUE)
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
Data$SchoolNo <- Data$Schools*1000/Data$TotPop
#colnames(Data)[159] <- "Dist.BRural"
#write.dta(Data, "Data.dta")
#Regressions
#Full Model - Performance
df <- Data[, c(157, 159:186, 143:150, 189:190, 195:205, 207, 217, 218)]
fit.scores <- lm(df)
fit.scores <-cluster.vcov(fit.scores, Data$Dist)
library(multiwayvcov)
install.packages("multiwayvcov")
library(multiwayvcov)
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
colnames(Data)
df <- Data[, c(17, 3:10, 19:47, 49:50, 55:65, 67:68, 77:78)]
fit.scores <- lm(df)
fit.scores <-cluster.vcov(fit.scores, Data$Dist)
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
#Everything that exists is an object.
#Everything that happens is a function call.
setwd("D:/Share Point/OneDrive/GitHub/greek-salad")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(dummies)
library(multiwayvcov)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
Data <- ldply(lapply(Files[15], read.csv))[,-c(1, 29)]
colnames(Data) <- c("Block", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Bifurcated")
#Yadgir <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "YADAGIRI")))[,1]))
#Gulbarga <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "GULBARGA")))[,1]))
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
School <- ldply(lapply(Files[9], read.csv))[,-2]
colnames(School) <- c("Block", "Year", "Schools")
Data <- merge(Data, School, by = c("Block", "Year"))
Census <- ldply(lapply(Files[6], read.csv))[,c(2, 33:38)]
Census$Literacy <- Census$Literates/Census$TotPop
Census$Caste <- Census$SCST/Census$TotPop
colnames(Census)[1] <- "Block"
Data <- merge(Data, Census, by = "Block")
#Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
#Data$SchoolNo <- Data$Schools*1000/Data$TotPop
#write.dta(Data, "Data.dta")
Dataset <- Data
Data <- dummy.data.frame(Data, names = c("Year", "Dist"), sep = ".", all = TRUE)
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
Data$SchoolNo <- Data$Schools*1000/Data$TotPop
#colnames(Data)[159] <- "Dist.BRural"
#write.dta(Data, "Data.dta")
#Regressions
#Full Model - Performance
df <- Data[, c(17, 3:10, 19:47, 49:50, 55:65, 67:68, 77:78)]
fit.scores <- lm(df)
fit.scores <-cluster.vcov(fit.scores, Dataset$Dist)
stargazer(fit.scores)
coeftest(fit.scores.ols, fit.scores)
library(lmtest)
coeftest(fit.scores.ols, fit.scores)
fit.scores.ols <- lm(df)
fit.scores <- cluster.vcov(fit.scores.ols, Dataset$Dist)
coeftest(fit.scores.ols, fit.scores)
coeftest(fit.scores.ols)
coeftest(fit.scores.ols, fit.scores)
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
#Everything that exists is an object.
#Everything that happens is a function call.
setwd("D:/Share Point/OneDrive/GitHub/greek-salad")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(dummies)
library(multiwayvcov)
library(lmtest)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
cluster <-function(model, cluster)
{
require(multiwayvcov)
require(lmtest)
vcovCL<-cluster.vcov(model, cluster)
coef<-coeftest(model, vcovCL)
w<-waldtest(model, vcov = vcovCL, test = "F")
ci<-get_confint(model, vcovCL)
return(list(coef, w, ci))
}
Data <- ldply(lapply(Files[15], read.csv))[,-c(1, 29)]
colnames(Data) <- c("Block", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Bifurcated")
#Yadgir <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "YADAGIRI")))[,1]))
#Gulbarga <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "GULBARGA")))[,1]))
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
School <- ldply(lapply(Files[9], read.csv))[,-2]
colnames(School) <- c("Block", "Year", "Schools")
Data <- merge(Data, School, by = c("Block", "Year"))
Census <- ldply(lapply(Files[6], read.csv))[,c(2, 33:38)]
Census$Literacy <- Census$Literates/Census$TotPop
Census$Caste <- Census$SCST/Census$TotPop
colnames(Census)[1] <- "Block"
Data <- merge(Data, Census, by = "Block")
#Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
#Data$SchoolNo <- Data$Schools*1000/Data$TotPop
#write.dta(Data, "Data.dta")
Dataset <- Data
Data <- dummy.data.frame(Data, names = c("Year", "Dist"), sep = ".", all = TRUE)
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
Data$SchoolNo <- Data$Schools*1000/Data$TotPop
#colnames(Data)[159] <- "Dist.BRural"
#write.dta(Data, "Data.dta")
#Regressions
#Full Model - Performance
df <- Data[, c(17, 3:10, 19:47, 49:50, 55:65, 67:68, 77:78)]
fit.scores <- lm(df)
cluster(fit.scores, Dataset$Dist)
fit.scores <- lm(df)
summary(fit.scores)
cluster <- function(model, cluster)
{
require(multiwayvcov)
require(lmtest)
vcovCL<-cluster.vcov(model, cluster)
coef<-coeftest(model, vcovCL)
w<-waldtest(model, vcov = vcovCL, test = "F")
ci<-get_confint(model, vcovCL)
return(list(coef, w, ci))
}
Data <- ldply(lapply(Files[15], read.csv))[,-c(1, 29)]
colnames(Data) <- c("Block", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Bifurcated")
cluster(fit.scores, Dataset$Dist)
View(df)
fit.scores <- lm(df)
colnames(Dataset)
cluster.vcov(fit.scores, Dataset$Dist)
fit.scores <- lm(Df)
fit.scores <- lm(df)
fit.scores
#Everything that exists is an object.
#Everything that happens is a function call.
setwd("D:/Share Point/OneDrive/GitHub/greek-salad")
library(foreign)
library(stargazer)
library(plyr)
library(reshape)
library(MatchIt)
library(dummies)
library(multiwayvcov)
library(lmtest)
options(scipen = 999, digits=2)
Files <- list.files(pattern = "*.csv")
cluster <- function(model, cluster)
{
require(multiwayvcov)
require(lmtest)
vcovCL<-cluster.vcov(model, cluster)
coef<-coeftest(model, vcovCL)
w<-waldtest(model, vcov = vcovCL, test = "F")
ci<-get_confint(model, vcovCL)
return(list(coef, w, ci))
}
Data <- ldply(lapply(Files[15], read.csv))[,-c(1, 29)]
colnames(Data) <- c("Block", "Year", "Marks1", "Marks2", "Marks3", "Marks4", "Marks5", "Marks6", "TotalMarks", "Dist", "Rural", "WorkDays",  "AcadInsp", "DevGrantR", "DevGrantE", "TLMGrantR", "TLMGrantE", "Classrooms", "ToiletG", "Electricity", "Library", "PlayGround", "Male_Tch", "Female_Tch", "Grad_Tch", "ProfQ_Tch", "Days_nonTch", "Public", "Split", "Bifurcated")
#Yadgir <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "YADAGIRI")))[,1]))
#Gulbarga <- as.character(unique(droplevels(subset(Data, eval(Data$Dist == "GULBARGA")))[,1]))
new <- c("BAGEPALLY", "CHANNAPATNA", "CHIKKABALLAPUR", "CHINTAMANI", "GOWRIBIDANUR", "GUDIBANDA", "KANAKAPURA", "MAGADI", "RAMANAGARA", "SHAHAPUR", "SHORAPUR", "SIDLAGHATTA", "YADGIR")
old <- c("AFZALPUR", "ALAND", "BANGARAPETE", "CHINCHOLI", "CHITTAPUR", "DEVANAHALLI", "DODDABALLAPURA", "HOSAKOTE", "JEWARGI", "KOLAR", "MALUR", "MULBAGAL", "NELAMANGALA", "SEDAM", "SRINIVASAPUR")
School <- ldply(lapply(Files[9], read.csv))[,-2]
colnames(School) <- c("Block", "Year", "Schools")
Data <- merge(Data, School, by = c("Block", "Year"))
Census <- ldply(lapply(Files[6], read.csv))[,c(2, 33:38)]
Census$Literacy <- Census$Literates/Census$TotPop
Census$Caste <- Census$SCST/Census$TotPop
colnames(Census)[1] <- "Block"
Data <- merge(Data, Census, by = "Block")
#Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
#Data$SchoolNo <- Data$Schools*1000/Data$TotPop
#write.dta(Data, "Data.dta")
Dataset <- Data
Data <- dummy.data.frame(Data, names = c("Year", "Dist"), sep = ".", all = TRUE)
Data$SchoolGrant <- Data$TLMGrantR + Data$DevGrantR
Data$SchoolNo <- Data$Schools*1000/Data$TotPop
#colnames(Data)[159] <- "Dist.BRural"
#write.dta(Data, "Data.dta")
colnames(Data)
df <- Data[, c(17, 3:10, 19:47, 49:50, 55:65, 67, 77:78)]
fit.scores <- lm(df)
cluster(fit.scores, Dataset$Dist)
cluster.vcov(fit.scores, Dataset$Dist)
fit.scores
fit.scores <- lm(df)
stargazer(fit.scores, type = "text")
colnames(Data)
df <- Data[, c(78, 3:10, 19:47, 75, 71, 76)]
fit.scores <- lm(df)
df <- Data[, c(17, 3:10, 19:47, 49:50, 55:65, 67, 77:78, 75, 71, 76)]
fit.scores <- lm(df)
df <- Data[, c(78, 3:10, 19:47, 75, 71, 76)]
fit.school <- lm(df)
stargazer(fit.scores, fit.school, fit.grants, fit.public, df = FALSE, digits = 1, type = "text", out = "file.txt")#, keep = "Bifurcated"
df <- Data[, c(17, 3:10, 19:47, 49:50, 55:65, 67, 77:78, 75, 71, 76)]
fit.scores <- lm(df)
df <- Data[, c(78, 3:10, 19:47, 75, 71, 76)]
fit.school <- lm(df)
df <- Data[, c(77, 3:10, 19:47, 75, 71, 76, 78)]
fit.grants <- lm(df)
df <- Data[, c(65, 3:10, 19:47, 75, 71, 76, 78)]
fit.public <- lm(df)
stargazer(fit.scores, fit.school, fit.grants, fit.public, df = FALSE, digits = 1, type = "text", out = "file.txt")#, keep = "Bifurcated"
colnames(Data)
df <- Data[, c(17, 3:10, 19:47, 49:50, 55:65, 67, 77:78, 75, 71, 76)]
fit.scores <- lm(df)
fit.scores
stargazer(fit.scores, fit.school, fit.grants, fit.public, df = FALSE, digits = 1, type = "text", out = "file.txt")#, keep = "Bifurcated"
colnames(Data)
source('D:/Share Point/OneDrive/GitHub/greek-salad/MoreRegressions.R')
